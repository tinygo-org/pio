// Code generated by pioasm; DO NOT EDIT.

//go:build rp2040
package piolib
import (
    pio "github.com/tinygo-org/pio/rp2-pio"
)
// sdClk

const sdClkWrapTarget = 0
const sdClkWrap = 1

var sdClkInstructions = []uint16{
		//     .wrap_target
		0xd007, //  0: irq    nowait 7        side 1     
		0xc047, //  1: irq    clear 7         side 0     
		//     .wrap
}
const sdClkOrigin = -1
func sdClkProgramDefaultConfig(offset uint8) pio.StateMachineConfig {
	cfg := pio.DefaultStateMachineConfig()
	cfg.SetWrap(offset+sdClkWrapTarget, offset+sdClkWrap)
	cfg.SetSidesetParams(1, false, false)
	return cfg;
}

// sdCmdOrDat

const sdCmdOrDatWrapTarget = 8
const sdCmdOrDatWrap = 15

const sdCmdOrDatoffset_noArgStateWaitHigh = 0
const sdCmdOrDatoffset_noArgStateWaitForCmdBits = 2
const sdCmdOrDatoffset_stateSendBits = 3
const sdCmdOrDatoffset_stateInlineInstruction = 7
const sdCmdOrDatoffset_stateRxBits = 9
const sdCmdOrDatoffset_wrapFor4bitRx = 14
const sdCmdOrDatoffset_wrapTargetFor4bitRx = 16

var sdCmdOrDatInstructions = []uint16{
		0xe00f, //  0: set    pins, 15                   
		0xe08f, //  1: set    pindirs, 15                
		0x60f0, //  2: out    exec, 16                   
		0x6030, //  3: out    x, 16                      
		0x2047, //  4: wait   0 irq, 7                   
		0x6001, //  5: out    pins, 1                    
		0x0045, //  6: jmp    x--, 5                     
		0x60f0, //  7: out    exec, 16                   
		//     .wrap_target
		0x60f0, //  8: out    exec, 16                   
		0x6030, //  9: out    x, 16                      
		0xe080, // 10: set    pindirs, 0                 
		0x20a0, // 11: wait   1 pin, 0                   
		0x2020, // 12: wait   0 pin, 0                   
		0x2047, // 13: wait   0 irq, 7                   
		0x4001, // 14: in     pins, 1                    
		0x004e, // 15: jmp    x--, 14                    
		//     .wrap
		0x4004, // 16: in     pins, 4                    
		0x0050, // 17: jmp    x--, 16                    
		0x60f0, // 18: out    exec, 16                   
}
const sdCmdOrDatOrigin = 0
func sdCmdOrDatProgramDefaultConfig(offset uint8) pio.StateMachineConfig {
	cfg := pio.DefaultStateMachineConfig()
	cfg.SetWrap(offset+sdCmdOrDatWrapTarget, offset+sdCmdOrDatWrap)
	return cfg;
}

