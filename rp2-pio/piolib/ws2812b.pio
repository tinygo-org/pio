; Timings according to Datasheet
; 	T0H = 400ns
; 	T0L = 850ns
; 	T1H = 800ns
; 	T1L = 450ns
; Thus, a whole cycle is 1250ns. This will be our base unit of transmission.
; Next unit of time is one that is closest to T0H and T1L. 
; If we divide baseline by 3 we get 1250/3 = 416.67, falling between 400 and 450.
; Since we need more than 1 instruction per high/low time, we examine cases where
; we split the split baseline in 3 and then calculate result PIO clockdiv since 3 is minimum
; number of instructions to do first part of high time.
;
; From the equations:
;  piofreq = 256*clockfreq / (256*whole + frac)
; where period = 1e9/freq => freq = 1e9/period, so:
;  1e9/period = 256*clockfreq / (256*whole + frac) =>
;  256*whole + frac = 256*clockfreq*period/1e9
; So, the previous equations yield:
;	416.67/3=138.89 -> ???

.program ws2812b_led
public entry_point:
	pull ifempty block ; Do autopull, blocks if Tx empty.
bitloop:
	; 3 instructions high logic level
	set pins, 1    ; Drive pin high at start of pulse.
	out y, 1       ; Shift 1 bit out, and write it to y.
	jmp !y lolo    ; Jump to LOW bit part.
	jmp hilo [2]   ; Jump to 

lolo:
	set pins, 0 [2]; To create T0L we need 6 cycles, 3 of them are part of hi branch.
hilo:
	set pins, 0 
	jmp !osre bitloop [1]

% go {
//go:build rp2040
package piolib

import (
    pio "github.com/tinygo-org/pio/rp2-pio"
)
%}